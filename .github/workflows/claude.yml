name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Changed from 'read' to 'write' to allow branch creation and pushes
      pull-requests: write  # Changed from 'read' to 'write' to allow PR creation
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to access all branches

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          allowed_tools: "Bash(git *),Bash(npm install),Bash(npm run build),Bash(npm run test*),Bash(npm run lint*),Bash(yarn *),Bash(pnpm *)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            This is a React video editor application. When working on features:
            - Create feature branches from the appropriate base branch (WIP/version-8 for version 8 features)
            - Use descriptive branch names like "feature/asset-crop" or "fix/timeline-bug"
            - Ensure all new React components use TypeScript
            - Test any video editing functionality before submitting
            - Follow React best practices and hooks patterns
            - When working with version 8 features, always branch from WIP/version-8
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test


